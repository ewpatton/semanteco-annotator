<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsl">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>edu.rpi.tw.escience</groupId>
    <artifactId>semanteco-annotator-all</artifactId>
    <version>4.2-SNAPSHOT</version>
  </parent>

  <artifactId>semanteco-annotator-webapp</artifactId>

  <packaging>war</packaging>
  <name>semanteco Annotator webapp</name>

  <repositories>
    <repository>
      <id>tetherless</id>
      <url>http://orion.tw.rpi.edu/artifactory/libs-release/</url>
    </repository>
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <tomcat.version>7.0.29</tomcat.version>
    <tomcat.port>8080</tomcat.port>
    <tomcat.url>http://localhost:${tomcat.port}/manager/text</tomcat.url>
    <!-- specify artifact for default module here -->
    <module.default>semanteco-annotator</module.default>
    <use-servlet>semanteco-servlet</use-servlet>
    <cr.directories.data-root>java.io.tmpdir</cr.directories.data-root>
  </properties>

  <dependencies>
    <!-- place modules here using the following form -->
    <!--
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-sample-facet</artifactId>
      <version>4.2-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>
    -->
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-annotator</artifactId>
      <version>4.2-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>

    <!-- required dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-servlet-base</artifactId>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>${use-servlet}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-catalina</artifactId>
      <version>${tomcat.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-java</artifactId>
      <version>2.40.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-arq</artifactId>
      <version>2.11.1</version>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-test</artifactId>
      <version>4.2-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>2.5.1</version>
	<configuration>
	  <source>1.6</source>
	  <target>1.6</target>
	</configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-war-plugin</artifactId>
	<version>2.2</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
              <Implementation-Build>${buildNumber}</Implementation-Build>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.0</version>
	<configuration>
	  <update>true</update>
	  <url>${tomcat.url}</url>
	  <server>tomcat</server>
	  <path>/annotator</path>
	</configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-dependency-plugin</artifactId>
	<version>2.5.1</version>
	<executions>
          <execution>
            <id>configure-base</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>semanteco-servlet-base</includeArtifactIds>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
              <includes>WEB-INF\/*.tld,js\/**\/*,css\/**\/*,images\/**\/*</includes>
            </configuration>
          </execution>
	  <execution>
            <id>copy-modules</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeGroupIds>javax.servlet,javax.servlet.jsp,org.apache.tomcat</excludeGroupIds>
              <excludeTransitive>true</excludeTransitive>
              <includeClassifier>module</includeClassifier>
              <includeScope>provided</includeScope>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/modules</outputDirectory>
            </configuration>
	  </execution>
          <execution>
            <id>copy-module-deps</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeGroupIds>javax.servlet,javax.servlet.jsp,org.apache.tomcat</excludeGroupIds>
              <excludeArtifactIds>semanteco-test</excludeArtifactIds>
              <excludeClassifiers>module</excludeClassifiers>
              <includeScope>provided</includeScope>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/lib</outputDirectory>
            </configuration>
          </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>properties-maven-plugin</artifactId>
	<version>1.0-alpha-2</version>
	<executions>
	  <execution>
	    <phase>generate-resources</phase>
	    <goals>
	      <goal>write-project-properties</goal>
	    </goals>
	    <configuration>
	      <outputFile>${project.build.outputDirectory}/semanteco.properties</outputFile>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>2.12</version>
	<configuration>
	  <basedir>${project.build.directory}</basedir>
	  <workingDirectory>${project.build.directory}</workingDirectory>
	</configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <format>Build {0} on {1,date,yyyy-MM-dd HH:mm:ss} from git commit {2}</format>
          <items>
            <item>buildNumber0</item>
            <item>timestamp</item>
            <item>scmVersion</item>
          </items>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
          <shortRevisionLength>7</shortRevisionLength>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
    	<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    	<plugin>
    	  <groupId>org.eclipse.m2e</groupId>
    	  <artifactId>lifecycle-mapping</artifactId>
    	  <version>1.0.0</version>
    	  <configuration>
    	    <lifecycleMappingMetadata>
    	      <pluginExecutions>
    		<pluginExecution>
    		  <pluginExecutionFilter>
    		    <groupId>org.codehaus.mojo</groupId>
    		    <artifactId>
    		      properties-maven-plugin
    		    </artifactId>
    		    <versionRange>
    		      [1.0-alpha-2,)
    		    </versionRange>
    		    <goals>
    		      <goal>
    			write-project-properties
    		      </goal>
    		    </goals>
    		  </pluginExecutionFilter>
    		  <action>
    		    <ignore></ignore>
    		  </action>
    		</pluginExecution>
    		<pluginExecution>
    		  <pluginExecutionFilter>
    		    <groupId>org.apache.maven.plugins</groupId>
    		    <artifactId>
    		      maven-dependency-plugin
    		    </artifactId>
    		    <versionRange>
    		      [2.5.1,)
    		    </versionRange>
    		    <goals>
    		      <goal>
    			unpack-dependencies
    		      </goal>
                      <goal>
                        copy-dependencies
                      </goal>
    		    </goals>
    		  </pluginExecutionFilter>
    		  <action>
    		    <ignore></ignore>
    		  </action>
    		</pluginExecution>
    	      </pluginExecutions>
    	    </lifecycleMappingMetadata>
    	  </configuration>
    	</plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>use-default-module</id>
      <activation>
        <!-- switch this to true to activate default module on every build -->
        <activeByDefault>true</activeByDefault>
        <property>
          <name>!cancel-default-module</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-dependency-plugin</artifactId>
	    <version>2.5.1</version>
	    <executions>
              <execution>
                <id>unpack-default-module</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeArtifactIds>${module.default}</includeArtifactIds>
                  <outputDirectory>${project.build.directory}/default-module/resources</outputDirectory>
                  <includes>META-INF\/res\/**\/*</includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>copy-default-module-assets</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.build.directory}/default-module/resources/META-INF/res</directory>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.2</version>
            <configuration>
              <warSourceExcludes>index.jsp</warSourceExcludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>integration-tests</id>
      <activation>
        <property>
          <name>run-its</name>
        </property>
      </activation>

      <properties>
        <sonar.language>java</sonar.language>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${project.basedir}/../target/jacoco-it.exec</sonar.jacoco.itReportPath>
        <jetty.host>localhost</jetty.host>
        <jetty.port>9999</jetty.port>
        <jetty.stopPort>9995</jetty.stopPort>
        <jetty.stopKey>STOP</jetty.stopKey>
        <jetty.jettyXML>src/test/resources/jetty.xml</jetty.jettyXML>
      </properties>

      <build>
        <testResources>
          <testResource>
            <directory>src/test/resources</directory>
            <includes>
              <include>jetty.xml</include>
            </includes>
            <filtering>true</filtering>
          </testResource>
        </testResources>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>initialize-jacoco</id>
                <goals><goal>prepare-agent</goal></goals>
                <configuration>
                  <propertyName>jacoco.argLine.surefire</propertyName>
                  <destFile>${sonar.jacoco.reportPath}</destFile>
                  <dataFile>${sonar.jacoco.reportPath}</dataFile>
                  <append>true</append>
                </configuration>
              </execution>
              <execution>
                <id>agent-it</id>
                <goals><goal>prepare-agent-integration</goal></goals>
                <configuration>
                  <propertyName>jacoco.argLine.jetty</propertyName>
                  <destFile>${sonar.jacoco.itReportPath}</destFile>
                  <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                  <append>true</append>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>8.1.14.v20131031</version>
            <configuration>
              <scanIntervalSeconds>0</scanIntervalSeconds>
              <daemon>true</daemon>
              <stopPort>${jetty.stopPort}</stopPort>
              <stopKey>${jetty.stopKey}</stopKey>
              <contextPath>/annotator</contextPath>
              <jettyXml>${project.build.directory}/test-classes/jetty.xml</jettyXml>
              <webAppSourceDirectory>${project.build.directory}/${project.build.finalName}</webAppSourceDirectory>
              <testClassesDirectory>${project.build.directory}/test-classes</testClassesDirectory>
              <waitForChild>false</waitForChild>
              <useTestScope>true</useTestScope>
            </configuration>
            <executions>
              <execution>
                <id>start-jetty</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run-forked</goal>
                </goals>
                <configuration>
                  <jvmArgs>${jacoco.argLine.jetty}</jvmArgs>
                </configuration>
              </execution>
              <execution>
                <id>stop-jetty</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>${jacoco.argLine.surefire}</argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.14.1</version>
            <configuration>
              <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
              <argLine>${jacoco.argLine.jetty}</argLine>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>integration-test</goal>
                </goals>
                <configuration>
                  <properties>
                    <property>
                      <name>listener</name>
                      <value>org.sonar.java.jacoco.JUnitListener</value>
                    </property>
                  </properties>
                </configuration>
              </execution>
              <execution>
                <id>verify</id>
                <goals>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

      <dependencies>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-jacoco-listeners</artifactId>
          <version>2.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.apache.jena</groupId>
            <artifactId>jena-arq</artifactId>
            <version>2.11.1</version>
          </dependency>
          <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>0.6.5.201403032054</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>
  </profiles>
</project>
